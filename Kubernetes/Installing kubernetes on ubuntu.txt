1) SET HOSTNAMES FOR MASTER AND WORKER NODES

sudo hostnamectl set-hostname "k8s-master"     // Run this command on master node
sudo hostnamectl set-hostname "k8s-node-0"     // Run this command on node-0
sudo hostnamectl set-hostname "k8s-node-1"     // Run this command on node-1

2) Add the following in the /etc/hosts file in the master node
<privateip> hostname

3) Disable swap and Add Kernel Modules : (on all nodes)
sudo swapoff -a

sudo tee /etc/modules-load.d/containerd.conf <<EOF
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

sudo tee /etc/sysctl.d/kubernetes.conf<<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

sudo sysctl --system

4) Install Containerd Runtime : (on All Nodes) 
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

sudo apt update
sudo apt install -y containerd.io

containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

sudo systemctl restart containerd && sudo systemctl enable containerd

sudo systemctl status containerd

5) Install Kubectl, kubelet and kubeadm : (on all nodes)

sudo apt install -y apt-transport-https curl 
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/kubernetes-xenial.gpg
sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
sudo apt update && sudo apt install -y kubelet kubeadm kubectl

6) Initialize Kubernetes Cluster using kubeadm
(on master)
sudo kubeadm init 
mkdir -p $HOME/.kube
$  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
$  sudo chown $(id -u):$(id -g) $HOME/.kube/config

(on worker node)

sudo kubeadm join command 
sudo kubeadm token create --print-join-command (on master if the join command is lost)

kubectl get nodes

7) Deploy Calico Pod Network Add-on

kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/calico.yaml

kubectl get nodes 
(your cluster is ready)
